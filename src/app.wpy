<style lang="scss">
  @import './assets/style/_variables.scss';

  page {
    height: 100%;
    background: $bg;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import zajax from './utils/zajax'
  import { URL } from './share/consts'
  import zstore from './utils/zstore'
  import zmid from './utils/zmid'
  import zlog from './utils/zlog'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/mine',
        'pages/attnd',
        'pages/config',
        'pages/selfinfo',
        'pages/auth'
      ],
      window: {
        backgroundTextStyle: 'light',
        backgroundColor: '#ebebeb',
        navigationBarBackgroundColor: '#00897B',
        navigationBarTitleText: 'Simple考勤',
        navigationBarTextStyle: 'white',
        backgroundTextStyle: 'dark'
      },
      tabBar: {
        color: '#757575',
        selectedColor: '#00897B',
        borderStyle: 'black',
        position: 'bottom',
        list: [
          { pagePath: 'pages/index', text: '考勤' },
          { pagePath: 'pages/mine', text: '我的' },
        ]
      }
    }

    globalData = {}

    constructor () {
      super()
      this.use('promisify')
    }

    onLaunch() {
      zstore.set(zstore.logTime, Date.now())
      this.updateWeApp()
      this.login()
      this.auth()
    }

    // 更新小程序版本
    updateWeApp() {
      const updateManager = wx.getUpdateManager()
      updateManager.onCheckForUpdate(function (res) {
        // 请求完新版本信息的回调
        console.log(res.hasUpdate)
      })
      updateManager.onUpdateReady(function () {
        wx.showModal({
          title: '更新提示',
          content: '新版本已经准备好，是否重启应用？',
          success: function (res) {
            if (res.confirm) {
              // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
              updateManager.applyUpdate()
            }
          }
        })
      })
      updateManager.onUpdateFailed(function () {
        // 新的版本下载失败
      })
    }

    auth() {
      wx.getSetting({
        success(res) {
          zlog.log(res)
          if (!res.authSetting['scope.userLocation']) {
            wx.authorize({
              scope: 'scope.userLocation',
              success: () => {
                zlog.log(res.authSetting, 'app/authorize')
              }
            })
          }
        }
      })
    }

    login() {
      zmid.login()
    }

  }
</script>
