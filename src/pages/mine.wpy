<style lang="scss">
  @import '../assets/style/_variables.scss';
  @import '../assets/style/_common.scss';

.mine {
  box-sizing: border-box;
  padding: 30rpx;

  &__info {
    box-sizing: border-box;
    background: white;
    height: 200rpx;
    @extend %box-edge;
    margin-bottom: 30rpx;
    padding: 30rpx;
    display: flex;
    position: relative;
    animation: fade-out 1s;
  }

  &__avator {
    width: 140rpx;
    height: 140rpx;
    border-radius: 5rpx;
    margin-right: 30rpx;
    background: $theme;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 80rpx;
  }

  &__selfinfo {
    height: 100%;
    width: 430rpx;
    display: flex;
    flex-direction: column;
    justify-content: center;
    &--name {
      font-size: 32rpx;
      color: black;
      white-space: nowrap;
      overflow-x: auto;
      line-height: 60rpx;
    }
    &--location {
      font-size: 28rpx;
      color: $font;
      white-space: nowrap;
      overflow-x: auto;
      line-height: 66rpx;
    }
  }

  &__arrow {
    width: 30rpx;
    height: 30rpx;
    position: absolute;
    right: 20rpx;
    top: 50%;
    transform: translateY(-50%);
  }

  &__config {
    width: 100rpx;
    height: 100rpx;
    position: absolute;
    right: 0;
    top: 0;
    image {
      width: 40rpx;
      height: 40rpx;
      right: 30rpx;
      top: 30rpx;
      position: absolute;
    }
  }

  &__status {
    box-sizing: border-box;
    height: 70rpx;
    margin-bottom: 30rpx;
    display: flex;
    justify-content: space-between;
    animation: fade-out 1s;
  }

  &__tab {
    box-sizing: border-box;
    color: $font;
    font-size: 28rpx;
    height: 70rpx;
    display: flex;
    align-items: center;
    background: white;
    border-radius: 10rpx;
    &--yell, &--resp {
      box-sizing: border-box;
      padding-left: 30rpx;
      padding-right: 30rpx;
      line-height: 70rpx;
    }
    &--yell {
      border-top-left-radius: 10rpx;
      border-bottom-left-radius: 10rpx;
    }
    &--resp {
      border-top-right-radius: 10rpx;
      border-bottom-right-radius: 10rpx;
    }
    &--yell-active, &--resp-active {
      background: $theme;
      color: white
    }
  }

  &__group {
    box-sizing: border-box;
    color: $font;
    font-size: 28rpx;
    height: 70rpx;
    line-height: 70rpx;
    padding-left: 20rpx;
    padding-right: 20rpx;
    background: white;
    border-radius: 10rpx;
  }

  &__search {
    box-sizing: border-box;
    width: 330rpx;
    height: 70rpx;
    background: white;
    @extend %box-edge;
    display: flex;
    align-items: center;
    &--icon {
      width: 40rpx;
      height: 40rpx;
      box-sizing: border-box;
      padding: 2rpx;
      margin: 0 10rpx;
    }
    input {
      font-size: 28rpx;
      color: $font;
      width: 230rpx;
      height: 48rpx;
    }
    view {
      width: 40rpx;
      height: 70rpx;
      padding: 2rpx;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    &--clear {
      width: 30rpx;
      height: 30rpx;
    }
  }

  &__list {
    margin-bottom: 30rpx;
    box-sizing: border-box;
  }

  &__item {
    margin-bottom: 30rpx;
    box-sizing: border-box;
    @extend %box-edge;
    background: white;
    padding: 30rpx;
    display: flex;
    flex-direction: column;
    position: relative;
    animation: fade-out 1s;
    &--title {
      white-space: nowrap;
      font-size: 40rpx;
      color: black;
      margin-bottom: 20rpx;
    }
    &--p {
      white-space: nowrap;
      font-size: 26rpx;
      color: $font;
      margin-top: 4rpx;
      margin-bottom: 4rpx;
      &-pwd {
        color: $red;
      }
    }
  }
}
</style>

<template>
  <view class="mine">
    <view class="mine__info" @tap="onClickSelfinfo">
      <view class="mine__avator">{{avator}}</view>
      <view class="mine__selfinfo">
        <view class="mine__selfinfo--name">{{name}}</view>
        <view class="mine__selfinfo--location">{{addrName}}</view>
      </view>
      <image class="mine__arrow" src="{{Icon.arrow}}" mode="scaleToFill"/>
    </view>
    <view class="mine__status">
      <view class="mine__search">
        <image class="mine__search--icon" src="{{Icon.search}}" mode="scaleToFill"/>
        <input placeholder="按考勤名字搜索" confirm-type="search" value="{{query}}" @input="onQueryInput"/>
        <view>
          <image class="mine__search--clear" wx:if="{{query}}"
            src="{{Icon.clear}}" mode="scaleToFill" @tap="onQueryClear"/>
        </view>
      </view>
      <view class="mine__tab">
        <view class="mine__tab--yell {{attndStatus===0 ? 'mine__tab--yell-active' : ''}}"
          @tap="onTagToggle({{0}})">点名</view>
        <view class="mine__tab--resp {{attndStatus===1 ? 'mine__tab--resp-active' : ''}}"
          @tap="onTagToggle({{1}})">签到</view>
      </view>
      <view class="mine__group" @tap="onClickGroup">名单</view>
    </view>
    <view class="mine__list">
      <view class="mine__item" @tap="onClickAttnd" 
        wx:for-items="{{attndList}}" wx:for-item="attnd" wx:key="id">
        <view class="mine__item--title">{{attnd.attnd_name}}（计科151）</view>
        <view class="mine__item--p mine__item--p-pwd">口令：{{attnd.cipher}}</view>
        <view class="mine__item--p">时间：{{attnd.start_time}}</view>
        <view class="mine__item--p">地点：{{attnd.addr_name}}</view>
      </view>
    </view>
    <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { Icon } from '../assets/icon/icon'
  import ALog from '../mixins/a-log'
  import mock from '../utils/mock'
  import zmap from '../utils/zmap'
  import { Type, BtnType, URL } from '../share/consts'
  import { getTimeFormat, getCurTime, getTimeMsFromTimeS, getTimeSFromTimeMs } from '../share/funcs'
  import AToast from '../mixins/a-toast'
  import Toast from 'wepy-com-toast'
  import { ToastType } from '../share/consts'

  export default class Mine extends wepy.page {
    mixins = [ALog, AToast]
    data = {
      Icon: Icon,
      name: '...',
      addrName: '',
      avator: '',
      attndList: [],
      attndStatus: 0,
      query: ''
    }

    components = {
      toast: Toast
    }

    onLoad() {
      wx.setNavigationBarTitle({ title: '我的' })
      this.getData()
    }

    onShow() {
      this.getData()
    }

    // Promise 并行开始，串行结束
    async getData() {
      wx.showNavigationBarLoading()
      let a = this.getSelfInfo()
      let b = this.getAddrName()
      let c = this.getAttndList()
      await a
      await b
      await c
      wx.hideNavigationBarLoading()
      return
    }

    // 获取个人信息
    getSelfInfo() {
      return mock.getSelfInfo()
        .then(data => {
          let name = data.data.name
          let ID = data.data.stu_id
          this.name = name
          // this.avator = String.prototype.toUpperCase.call(name[0])
          this.avator = name[0].toUpperCase()
          this.$apply()
        })
        .catch(err => {
          this.print(err)
        })
    }

    // 获取位置
    async getAddrName() {
      let latitude = 0
      let longitude = 0
      let addrName = ''
      await zmap.getLocation()
        .then(res => { latitude = res.latitude; longitude = res.longitude })
        .catch(err => console.log(err))
      await zmap.getAddrName(latitude, longitude)
        .then(res => {
          if (res) {
            this.addrName = res
            this.$apply() 
          }   
        })
        .catch(err => console.log(err))
      return
    }

    // 获取考勤列表
    getAttndList() {
      return mock.getAttndList()
        .then(data => {
          this.attndList = data.data.attnds
          this.attndList.map(el => {
            let date = new Date(getTimeMsFromTimeS(el.start_time))
            el.start_time = `${getTimeFormat(date, 'date', '/')} ${getTimeFormat(date, 'time', ':')}`
            return el
          })
          this.$apply()
        })
    }

    methods = {
      onClickAttnd(id) {
        let url = `attnd${Number.isInteger(id)? '?'+id : ''}`  
        wx.navigateTo({ url })
      },
      onClickSelfinfo() {
        wx.navigateTo({ url: 'selfinfo' })
      },
      onClickGroup() {
        wx.navigateTo({ url: 'group' })
      },
      onQueryInput(event) {
        this.query = event.detail.value
      },
      onQueryClear() {
        this.query = ''
      },
      //[考勤] [签到] 标签切换
      onTagToggle(index) {
        this.print(index)
        switch (index) {
          case 0: this.attndStatus = 0; break
          case 1: this.attndStatus = 1; break
          default: this.attndStatus = 0; break
        }
        this.$apply()
      },
    }
  }
</script>
