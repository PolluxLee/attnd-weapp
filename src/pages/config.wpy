<style lang="scss">
  @import '../assets/style/_variables.scss';
  @import '../assets/style/_common.scss';

  .config {
    box-sizing: border-box;
    width: 750rpx;
    overflow-x: hidden;
  }
</style>

<template>
  <view class="config" wx:if="{{isShow}}">
    <attndTitle><view slot="title">考勤信息</view></attndTitle>
    <nameInput :model.sync="nameModel"></nameInput>
    <attndTitle><view slot="title">* 若有历史考勤记录，可点击选择选取曾经使用过的考勤名称</view></attndTitle>    
    <datePicker :model.sync="dateModel"></datePicker>
    <timePicker :model.sync="timeModel"></timePicker>
    <lastInput :model.sync="lastModel"></lastInput>
    <groupInput :model.sync="groupModel"></groupInput>
    <attndTitle><view slot="title">* 输入考勤名单名称可新建考勤名单，新建的考勤名单里的人员由当次考勤确定；若已有历史名单，可点击选择选取</view></attndTitle>
    <attndTitle><view slot="title">个人信息</view></attndTitle>
    <authorInput :model.sync="authorModel"></authorInput>
    <locationInput :model.sync="locationModel"></locationInput>
    <attndTitle><view slot="title">* 签到有效范围为 200 米，上限 1000 人；因手机差异，获取的位置可能有一点偏差</view></attndTitle>
    <attndBtn :btns.sync="btnModel"></attndBtn>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import ALog from '../mixins/a-log'
  import AttndTitle from '../components/attnd-title'
  import AttndInput from '../components/attnd-input'
  import AttndBtn from '../components/attnd-btn'
  import { Type, BtnType, URL } from '../share/consts'
  import { getTimeFormat, getCurTime, getTimeMsFromTimeS, getTimeSFromTimeMs } from '../share/funcs'
  import zmap from '../utils/zmap'
  import mock from '../utils/mock'
  import zajax from '../utils/zajax'

  export default class Config extends wepy.page {

    mixins = [ALog]
    data = {
      nameModel: {},
      dateModel: {},
      timeModel: {},
      lastModel: {},
      groupModel: {},
      authorModel: {},
      locationModel: {},
      btnModel: [],
      isShow: false
    }

    components = {
      attndTitle: AttndTitle,
      attndBtn: AttndBtn,
      nameInput: AttndInput,
      datePicker: AttndInput,
      timePicker: AttndInput,
      groupInput: AttndInput,
      lastInput: AttndInput,
      authorInput: AttndInput,
      locationInput: AttndInput
    }

    onLoad(option) {
      wx.setNavigationBarTitle({ title: '发布考勤' })
      wx.showNavigationBarLoading()
      setTimeout(() => { wx.hideNavigationBarLoading() }, 1000);
      this.initData()
    }

    initData() {
      this.nameModel = { type: Type.TEXT_SELECT, label: '考勤名称', readonly: false, length: 50, value: '', hint: '例如：计科151-计网', extra: '选择', options: ['计科151-计网','计科152-计网','计科151-操作系统','计科152-操作系统'] }
      this.dateModel = { type: Type.DATE, label: '日期', readonly: false, options: [], value: '' }
      this.timeModel = { type: Type.TIME, label: '时间', readonly: false, options: [], value: '' }
      this.lastModel = { type: Type.SELECT, label: '持续', readonly: false, options: [], suffix: '分钟', value: '5', }
      this.groupModel = { type: Type.TEXT_SELECT, label: '考勤名单', readonly: false, length: 50, value: '', hint: '例如：计科151', extra: '选择', options: [] }
      this.authorModel = { type: Type.TEXT, label: '发布者', readonly: false, length: 50, value: '', hint: '' }
      this.locationModel = { type: Type.TEXT, label: '位置', readonly: true, length: 50, value: '', hint: '' }
      this.lastModel.options = ['5','10','15','20','30']

      this.dateModel.value = getCurTime('date')
      this.timeModel.value = getCurTime('time')
      this.btnModel = [
        { name: '发布', emit: 'release-btn', color: '#00897B' }
      ]
      this.isShow = true
      this.getGroupList()
      this.getAttndNames()
      this.getAuthorName()
      this.getAddrName()
    }

    // 获取历史考勤名字列表
    getAttndNames() {
      mock.getAttndNames()
        .then(data => {
          this.groupModel.options = data
          this.$apply()
        })
    }

    // 获取考勤名单名字列表
    getGroupList() {
      mock.getGroupList()
        .then(data => {
          this.nameModel.options = data
          this.$apply()
        })
    }

    // 获取我的名字
    getAuthorName() {
      mock.getSelfInfo()
        .then(data => {
          this.authorModel.value = data.data.name ? data.data.name : ''
          this.$apply()
        })
    }

    // 获取位置
    async getAddrName() {
      let latitude = 0
      let longitude = 0
      let addrName = ''
      await zmap.getLocation()
        .then(res => { latitude = res.latitude; longitude = res.longitude })
        .catch(err => console.log(err))
      if (!latitude && !longitude) {
        wx.showModal({ title: '提示', content: '获取位置失败，请稍后再试' })
        return
      }
      await zmap.getAddrName(latitude, longitude)
        .then(res => { this.locationModel.value = res; this.$apply() })
        .catch(err => {
          console.log(err)
          wx.showModal({ title: '提示', content: '获取位置失败，请稍后再试' })
        })
      return
    }

    methods = {

    }

    events = {
      // 发布考勤
      'release-btn': event => {
        zajax.get('https://www.zahub.top')
          .then(data => console.log(data))
          .catch(err => console.log(err))
      }
    }

    // 检查字段
    checkData() {

    }

  }
</script>
