<style lang="scss">
  @import '../assets/style/_variables.scss';
  @import '../assets/style/_common.scss';

  .config {
    box-sizing: border-box;
  }
</style>

<template>
  <view class="config" wx:if="{{isShow}}">
    <attndTitle><view slot="title">考勤信息</view></attndTitle>
    <nameInput :model.sync="nameModel"></nameInput>
    <datePicker :model.sync="dateModel"></datePicker>
    <timePicker :model.sync="timeModel"></timePicker>
    <lastInput :model.sync="lastModel"></lastInput>
    <attndTitle><view slot="title">个人信息</view></attndTitle>
    <authorInput :model.sync="authorModel"></authorInput>
    <locationInput :model.sync="locationModel"></locationInput>
    <attndTitle><view slot="title">*签到有效范围为 200 米，上限 1000 人</view></attndTitle>
    <attndBtn :btns.sync="btnModel"></attndBtn>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import ALog from '../mixins/a-log'
  import AttndTitle from '../components/attnd-title'
  import AttndInput from '../components/attnd-input'
  import AttndBtn from '../components/attnd-btn'
  import Constant from '../mixins/constant'
  import Func from '../mixins/func'

  export default class Config extends wepy.page {

    mixins = [Func, ALog, Constant]
    data = {
      nameModel: {},
      dateModel: {},
      timeModel: {},
      lastModel: {},
      authorModel: {},
      locationModel: {},
      btnModel: [],
      attndId: '',
      isShow: false
    }

    components = {
      attndTitle: AttndTitle,
      attndBtn: AttndBtn,
      nameInput: AttndInput,
      datePicker: AttndInput,
      timePicker: AttndInput,
      lastInput: AttndInput,
      authorInput: AttndInput,
      locationInput: AttndInput
    }

    onLoad(option) {
      this.attndId = option.id
      this.initData()
    }

    initData() {
      wx.showNavigationBarLoading()
      this.nameModel = { type: this.Type.TEXT, label: '考勤名称', readonly: false, length: 50, options: [], suffix: '', start: '', end: '', value: '' }
      this.dateModel = { type: this.Type.DATE, label: '日期', readonly: false, length: 50, options: [], suffix: '', start: '', end: '', value: '' }
      this.timeModel = { type: this.Type.TIME, label: '时间', readonly: false, length: 50, options: [], suffix: '', start: '', end: '', value: '' }
      this.lastModel = { type: this.Type.SELECT, label: '持续', readonly: false, length: 50, options: [], suffix: '分钟', start: '', end: '', value: '', }
      this.authorModel = { type: this.Type.TEXT, label: '发布者', readonly: false, length: 50, options: [], suffix: '', start: '', end: '', value: '' }
      this.locationModel = { type: this.Type.TEXT, label: '位置', readonly: true, length: 50, options: [], suffix: '', start: '', end: '', value: '', }
      this.lastModel.options = ['5','10','15','20','25','30']

      if (!this.attndId) {
        wx.setNavigationBarTitle({ title: '发布考勤' })
        this.dateModel.value = this.getCurTime('date')
        this.timeModel.value = this.getCurTime('time')
        this.btnModel = [
          { name: '发布', emit: 'release', color: '#00897B' }
        ]
        this.isShow = true
        wx.hideNavigationBarLoading()
        return
      }

      wx.setNavigationBarTitle({ title: '考勤配置' })
      this.getAttndData().then(data => {
        
        this.nameModel.value = data.name
        this.dateModel.value = data.date
        this.timeModel.value = data.time
        this.lastModel.value = data.last
        this.authorModel.value = data.author
        this.locationModel.value = data.location

        this.btnModel = [
          { name: '更新', emit: 'update', color: '#00897B' },
          { name: '删除', emit: 'remove', color: '#E6433E' },
        ]
        this.isShow = true
        wx.hideNavigationBarLoading()
        this.$apply()
      })
      
    }

    getAttndData() {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve({
            name: 'C++',
            date: '2018-05-13',
            time: '22:44',
            last: '5',
            author: 'kzz',
            location: 'gzhu'
          })
        }, 1000);
      })
    }

    methods = {

    }

    events = {
      onClickBtn(emit) {
        
      }
    }

  }
</script>
