<style lang="scss">
  @import '../assets/style/_variables.scss';
  @import '../assets/style/_common.scss';

  .group {
    box-sizing: border-box;
    position: relative;

    &__list {
      padding: 30rpx;
    }

    &__item {
      margin-bottom: 20rpx;
      background: white;
      @extend %box-edge;
      box-sizing: border-box;
      padding-left: 30rpx;
      padding-right: 30rpx;
      animation: fade-out 0.5s;
    }

    &__content {
      color: black;
      font-size: 36rpx;
      white-space: nowrap;
      overflow-x: auto;
      line-height: 120rpx;
    }

    &__search {
      box-sizing: border-box;
      padding: 30rpx;
      width: 100%;
      background: $theme;
    }

    &__input {
      box-sizing: border-box;
      width: 100%;
      border-radius: 10rpx;
      height: 70rpx;
      padding: 6rpx 0 6rpx 20rpx;
      background: white;
      display: flex;
      align-items: center;
      input {
        height: 100%;
        width: 550rpx;
        font-size: 30rpx;
        color: black;
      }
      &--search {
        width: 40rpx;
        height: 40rpx;
        margin-right: 10rpx;
      }
      &--clear {
        height: 70rpx;
        width: 60rpx;
        margin-left: 10rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        image {
          width: 28rpx;
          height: 28rpx;
        }
      }
    }

    &__baseline {
      color: $hint;
      font-size: 30rpx;
      text-align: center;
    }
  }
</style>

<template>
  <view class="group">
    <view class="group__search">
      <view class="group__input">
        <image class="group__input--search" src="{{Icon.search}}" mode="scaleToFill"/>
        <input placeholder="按组名搜索"  value="{{query}}" @input="onInput" 
          placeholder-style="color: #a5a5a5" 
          confirm-type="search"
          @confirm="onSearch"/>
        <view class="group__input--clear" @tap="onClickClear" wx:if="{{query}}">
          <image src="{{Icon.clear}}" mode="scaleToFill"/>
        </view>
      </view>
    </view>
    <view class="group__list">
      <view class="group__item" wx:for-items="{{displayList}}" wx:for-item="item" wx:key="id"
        @tap="onClickItem({{item.id}})">
        <view class="group__content">{{item.name}}</view>
      </view>
      <view wx:if="{{displayList.length===0}}" class="group__baseline">{{baseLineMsg}}</view>
    </view>
    <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import ALog from '../mixins/a-log'
  import { Icon } from '../assets/icon/icon'
  import AToast from '../mixins/a-toast'
  import Toast from 'wepy-com-toast'
  import { ToastType,URL, CODE } from '../share/consts'
  import zajax from '../utils/zajax'

  export default class Group extends wepy.page {

    mixins = [ALog, AToast]
    data = {
      Icon: Icon,
      query: '',
      baseLineMsg: '无名单信息',
      groupList: [],
      displayList: []
    }

    components = {
      toast: Toast
    }

    onLoad() {
      wx.setNavigationBarTitle({ title: '名单' })
      this.getData()
    }

    async getData() {
      wx.showNavigationBarLoading()
      await this.getGoupList()
      wx.hideNavigationBarLoading()
    }

    async getGoupList() {
      await zajax.get(URL.groupList)
        .then(res => {
          let body = res.data
          let code = body.code
          if (code === CODE.GLOBAL_SUCCESS) {
            this.groupList = Array.isArray(body.data) ? body.data : []
            this.displayList = Array.isArray(body.data) ? body.data : []
          }
          this.$apply()
        })
        .catch(err => {
          this.print(err, 'error')
        })
      if (this.displayList.length === 0) {
        this.baseLineMsg = '暂无名单信息'
        this.$apply()
      }
    }

    methods = {
      onClickItem(groupId) {
        if (!Number.isInteger(groupId)) return
        wx.navigateTo({ url: `groupinfo?${groupId}` })
      },
      onInput(event) {
        this.query = event.detail.value
      },
      onClickClear(event) {
        this.query = ''
        this.displayList = this.groupList
      },
      onSearch(event) {
        let value = event.detail.value
        if (!value) return
        this.displayList = this.groupList.filter(el => el.name.includes(value))
      }
    }

  }
</script>
