<style lang="scss">
  @import '../assets/style/_variables.scss';
  @import '../assets/style/_common.scss';

  .self {
    box-sizing: border-box;
    
  }
</style>

<template>
  <view class="self" wx:if="{{isShow}}">
    <attndTitle><view slot="title">个人信息</view></attndTitle>
    <nameInput :model.sync="nameModel"></nameInput>
    <idInput :model.sync="idModel"></idInput>
    <saveBtn :btns.sync="btnModel" @tap="onClickSave"></saveBtn>
    <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import ALog from '../mixins/a-log'
  import AttndTitle from '../components/attnd-title'
  import AttndInput from '../components/attnd-input'
  import AttndBtn from '../components/attnd-btn'
  import { Type, BtnType, URL, CODE } from '../share/consts'
  import { getTimeFormat, getCurTime, getTimeMsFromTimeS, getTimeSFromTimeMs } from '../share/funcs'
  import mock from '../utils/mock'
  import zajax from '../utils/zajax'
  import AToast from '../mixins/a-toast'
  import Toast from 'wepy-com-toast'
  import { ToastType } from '../share/consts'
  import zstore from '../utils/zstore'

  export default class Selfinfo extends wepy.page {

    mixins = [ALog, AToast]
    data = {
      isShow: false,
      nameModel: {},
      idModel: {},
      btnModel: []
    }

    components = {
      attndTitle: AttndTitle,
      nameInput: AttndInput,
      idInput: AttndInput,
      saveBtn: AttndBtn,
      toast: Toast
    }

    onLoad() {
      this.initData()
    }

    initData() {
      wx.showNavigationBarLoading()
      this.nameModel = { type: Type.TEXT, label: '名字', readonly: false, length: 50, value: '', hint: '请填写真实姓名' }
      this.idModel = { type: Type.TEXT, label: 'ID', readonly: false, length: 50, value: '', hint: '可以填写学号或工号' }
      this.btnModel = [
        { name: '保存', emit: 'save-btn', color: '#00897B' },
      ]
      this.getData()
    }

    // 获取用户信息
    async getData() {
      // 先从 storage 中获取
      let name = zstore.get(zstore.userName)
      let stuId = zstore.get(zstore.stuId)
      if (name && stuId) {
        this.nameModel.value = name
        this.idModel.value = stuId
        this.$apply()
        return
      }
      // storage 中没有再从后端获取
      let openid = zstore.get(zstore.openid)
      this.print(`openid: ${openid}`)
      if (!openid) {
        wx.hideNavigationBarLoading()
        this.isShow = true
        this.$apply()
        return
      }
      await zajax.get(URL.userInfo, { openid })
        .then(res => {
          let body = res.data
          let code = body.code
          if (code !== CODE.GLOBAL_SUCCESS) return
          this.nameModel.value = body.data.name
          this.idModel.value = body.data.stu_id
          zstore.set(zstore.userName, body.data.name ? body.data.name : '')
          zstore.set(zstore.stuId, body.data.stu_id? body.data.stu_id : '')
          zstore.set(zsotre.id, body.data.id ? body.data.id : '')
          this.$apply()
        })
        .catch(err => {
          this.print(err)
        })
      wx.hideNavigationBarLoading()
      this.isShow = true
      this.$apply()
    }

    //更新用户信息
    async updateUserInfo() {
      let data = {
        'name': this.nameModel.value,
        'stu_id': this.idModel.value
      }
      if (!data['name']) {
        wx.showModal({ title: '提示', content: '名字不能为空' })
        return
      }
      this.showToast(ToastType.LOADING, '正在保存')
      await zajax.post(URL.userInfo, data)
        .then(res => {
          this.hideToast()
          let body = res.data
          let code = body.code
          if (code !== CODE.GLOBAL_SUCCESS) {
            this.showToast(ToastType.FAIL, '失败', 2000)
            return
          }
          let userInfo = body.data
          zstore.set(zstore.userName, userInfo.name ? userInfo.name : '')
          zstore.set(zstore.stuId, userInfo.stu_id ? userInfo.stu_id : '')
          zstore.set(zstore.id, userInfo.id ? userInfo.id : '')
          this.showToast(ToastType.SUCCESS, '成功', 2000)
        })
        .catch(err => {
          this.print(err)
        })
    }


    methods = {

    }

    events = {
      // 更新个人信息
      'save-btn': event => {
        this.updateUserInfo()
      }
    }

  }
</script>
