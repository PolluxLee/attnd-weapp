<style lang="scss">
  @import '../assets/style/_variables.scss';
  @import '../assets/style/_common.scss';

  .atinput {
    width: 100%;
    &__item {
      box-sizing: border-box;
      height: 90rpx;
      display: flex;
      background: white;
      margin-bottom: 2rpx;
      width: 100%;
    }

    &__label {
      height: 100%;
      width: 180rpx;
      color: black;
      font-size: 30rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      box-sizing: border-box;
      border-right: 1rpx solid $bg-dark;
    }

    &__input {
      height: 100%;
      width: 570rpx;
      color: black;
      font-size: 30rpx;
      padding-left: 30rpx;
      padding-right: 30rpx;
      box-sizing: border-box;
      display: flex;
      align-items: center;
      input {
        width: 100%;
        height: 90%;
      }
      picker {
        .picker {
          width: 560rpx;
          height: 70rpx;
          display: flex;
          align-items: center;
        }
      }

      &--extra {
        height: 100%;
        width: 570rpx;
        color: black;
        font-size: 30rpx;
        box-sizing: border-box;
        display: flex;
        align-items: center;
        input {
          width: 440rpx;
          height: 90%;
          padding-left: 30rpx;
          padding-right: 30rpx;
          box-sizing: border-box;
          border-right: 1rpx solid $bg;
        }
        picker {
          .picker {
            width: 130rpx;
            height: 70rpx;
            display: flex;
            align-items: center;
            justify-content: center;
            box-sizing: border-box;
            color: $theme;
          }
        }
      }
    }
  }
</style>

<template>
  <view class="atinput">
    <view class="atinput__item"  wx:if="{{model.type!==Type.TEXT_SELECT}}">
      <view class="atinput__label">{{model.label}}</view>
      <view class="atinput__input">
        <input wx:if="{{model.type===Type.TEXT}}"
          value="{{model.value}}"
          disabled="{{model.readonly}}"
          maxlength="{{model.length}}"
          placeholder="{{model.hint}}"
          placeholder-style="color: #a5a5a5"
          @input="onInputChange"/>
        <picker wx:if="{{model.type===Type.TIME}}" 
          @change="onPickerChange" 
          value="{{model.value}}"
          start="{{model.start}}" mode="time"
          disabled="{{model.readonly}}">
          <view class="picker">
            {{model.value}}
          </view>
        </picker>
        <picker wx:if="{{model.type===Type.DATE}}"
          @change="onPickerChange" 
          value="{{model.value}}"
          mode="date" start="{{model.start}}"
          disabled="{{model.readonly}}">
          <view class="picker">
            {{model.value}}
          </view>
        </picker>
        <picker wx:if="{{model.type===Type.SELECT}}" 
          range="{{model.options}}"
          @change="onSelectorChange" mode="selector"
          disabled="{{model.readonly}}">
          <view class="picker">
            {{model.value}} {{model.suffix}}
          </view>
        </picker>
      </view>
    </view>
    <view class="atinput__item"  wx:if="{{model.type===Type.TEXT_SELECT}}">
      <view class="atinput__label">{{model.label}}</view>
      <view class="atinput__input--extra">
        <input
          value="{{model.value}}"
          disabled="{{model.readonly}}"
          maxlength="{{model.length}}"
          placeholder="{{model.hint}}"
          placeholder-style="color: #a5a5a5"
          @input="onInputChange"/>
        <picker 
          range="{{model.options}}"
          @change="onSelectorChange" mode="selector"
          disabled="{{model.readonly}}">
          <view class="picker">
            {{model.extra}}
          </view>
        </picker>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import ALog from '../mixins/a-log'
  import { Type, BtnType, URL } from '../share/consts'

  export default class AttndInput extends wepy.component {

    mixins = [ALog]
    data = {
      Type: Type,
      BtnType: BtnType
    }

    props = {
      model: {
        type: Object,
        default: {
          type: 0, 
          label: 'Label',
          value: 'Value',
          readonly: false,
          length: 50,
          options: [],
          suffix: '',
          start: '',
          end: '',
        },
        twoWay: true
      }
    }

    onLoad() {

    }

    methods = {
      onInputChange(event) {
        this.model.value = event.detail.value
      },
      onPickerChange(event) {
        if (!event.detail.value) return
        this.model.value = event.detail.value
      },
      onSelectorChange(event) {
        let index = event.detail.value
        this.model.value = this.model.options[index]
      }
    }

  }
</script>
